-- Migration: create_gdpr_deletion_logs_table.sql
-- Description: Creates a table to log GDPR data deletion requests for compliance

-- Create the GDPR deletion logs table
CREATE TABLE IF NOT EXISTS gdpr_deletion_logs (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  deletion_date TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  success BOOLEAN DEFAULT FALSE,
  user_hash TEXT, -- Stores only a hash of the user ID for audit purposes, not actual PII
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Add comment to explain table purpose
COMMENT ON TABLE gdpr_deletion_logs IS 'Logs of user data deletion requests for GDPR compliance';

-- Add Row Level Security to restrict access to admin only
ALTER TABLE gdpr_deletion_logs ENABLE ROW LEVEL SECURITY;

-- Create policy to allow only admin to view logs
CREATE POLICY "Admin can view deletion logs" 
  ON gdpr_deletion_logs FOR SELECT 
  USING (
    auth.uid() IN (
      SELECT auth.uid() FROM users 
      WHERE email = 'chrishide87@gmail.com'
    )
  );

-- Create policy to allow the system to insert new logs
CREATE POLICY "System can insert deletion logs" 
  ON gdpr_deletion_logs FOR INSERT 
  WITH CHECK (true);

-- Index for better query performance
CREATE INDEX gdpr_deletion_logs_date_idx ON gdpr_deletion_logs (deletion_date);
